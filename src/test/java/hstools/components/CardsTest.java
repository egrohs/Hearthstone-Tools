package hstools.components;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import hstools.domain.components.CardComponent;
import hstools.domain.components.SynergyBuilder;
import hstools.domain.entities.Card;

@RunWith(SpringRunner.class)
@SpringBootTest
public class CardsTest {
	@Autowired
	private CardComponent cb;

	@Autowired
	private SynergyBuilder tb;

//TODO fazer not asserts introspectivos, de forma que todas tags que as cartas nao tiverem devem ser geradas automaticamente. 
	// @Test
	/*
	public void testCardsTags() {
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("corpsetaker").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("jan'alai, the dragonhawk").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("zandalari templar").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(cb.getCard("shudderwock").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(cb.getCard("shudderwock").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(cb.getCard("shudderwock").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(cb.getCard("shudderwock").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(cb.getCard("shudderwock").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(cb.getCard("shudderwock").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("shudderwock").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(cb.getCard("tess greymane").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(cb.getCard("tess greymane").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(cb.getCard("tess greymane").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(cb.getCard("tess greymane").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(cb.getCard("tess greymane").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("tess greymane").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("enhance-o mechano").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("shaku, the collector").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(cb.getCard("master jouster").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(cb.getCard("master jouster").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(cb.getCard("master jouster").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(cb.getCard("master jouster").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(cb.getCard("master jouster").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(cb.getCard("master jouster").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(cb.getCard("master jouster").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("master jouster").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("FREEZE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("OVERLOAD")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ELUSIVE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ATTACKS")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("GIVE_DIVINE_SHIELD")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DAMAGE_ALL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("LOW_COST_MINION")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("POISONOUS")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("STEALTH")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("CHOOSE_ONE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ECHO")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DISCOVER")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("SILENCE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DIVINE_SHIELD")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("COST_MODIFY")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("SHUFFLE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("OVERKILL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ADJACENT")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ODD")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("HERO_POWER")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("MURLOC")));
		assertTrue(cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("BATTLECRY")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DAMAGE_ENEMIES")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("TREANTS")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("PLAY")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DISCARD")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DEMON")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("REMOVE_FROM_DECK")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("SUMMON")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("HIGH_HP")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("TRANSFORM")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("CANT_ATTACK")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("RETURN_TO_HAND")));
		assertTrue(cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("LOW_ATTACK")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ARMOR")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("GIVE_STEALTH")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("JADE_GOLEM")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ELEMENTAL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("REVEAL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("START_GAME")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ADAPT")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("HIGH_ATTACK")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("SPELL_DAMAGE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("REVIVE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DAMAGE_SPELL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DRAGON")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("EVEN")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("RITUAL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("COMBO")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("COUNTER")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("SECRET")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("CONTROL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("SPELL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("LIFESTEAL")));
		assertTrue(cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("LOW_HP")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("HEALTH_RESTORE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DESTROY")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("MAGNETIC")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("RECRUIT")));
		assertTrue(cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DEATHRATTLE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("HIGH_COST")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("INSPIRE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("LOW_COST")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("TWINSPELL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DEAL_DAMAGE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ENRAGE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("MECH")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("FORGETFUL")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("CHARGE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("QUEST")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("EQUIP")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("DRAW")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("MANA")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("TOTEM")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("COPY")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("AOE_BUFF")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("EOT")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("IMMUNE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("TAUNT")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("LACKEY")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("PIRATE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("WINDFURY")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("SOT")));
		assertTrue(cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("GENERATE")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("AURA")));
		assertTrue(cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("BEAST")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("HIGH_COST_MINION")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("RUSH")));
		assertTrue(!cb.getCard("gral, the shark").getTags().contains(cb.getTags().get("ATTACK_MODIFY")));
	}
*/
	@Test
	public void testCardSinergies() {
		String[] HAND = { "Arcane Breath", "Cleric of Scales", "Sand Breath", "Soul Infusion", "Breath of Dreams",
				"Cathedral Gargoyle", "Corrosive Breath", "Crystalsong Portal", "Demonic Project", "Envoy of Lazul",
				"Firetree Witchdoctor", "Nether Breath", "Parachute Brigand", "Tasty Flyfish", "Underbelly Fence",
				"Brainstormer", "Breath of the Infinite", "Chaos Gazer", "Dark Skies", "Dragonrider Talritha",
				"Electrowright", "Ferocious Howl", "Fire Hawk", "Lightning Breath", "Madame Lazul", "Scalerider",
				"Smolderthorn Lancer", "Stargazer Luna", "Flobbidinous Floop", "Garden Gnome", "Molten Breath",
				"Scaleworm", "Twilight Drake", "Vendetta", "Violet Spellsword", "War Master Voone", "Wing Commander",
				"Wispering Woods", "Bewitched Guardian", "Chronobreaker", "Crazed Netherwing", "Emberscale Drake",
				"Hunting Party", "Malygos, Aspect of Magic", "Rotnest Drake", "Sunreaver Warmage", "Witchwood Grizzly",
				"Abyssal Summoner", "Candle Breath", "Dragoncaster", "Flik Skyshiv", "Glinda Crowskin", "Meteorologist",
				"Unseen Saboteur", "Astromancer", "Crowd Roaster", "Valdris Felgorge", "Wyrmguard",
				"Hex Lord Malacrass", "Mana Giant", "Emeriss", "King Phaoris", "Mecha'thun", "Evocation", "Helboar",
				"Shadow Council", "Altruis the Outcast", "Scrap Shot", "The Dark Portal", "Glowfly Swarm",
				"Fel Summoner", "Beastmaster Leoroxx", "Nethrandamus", "Wild icon.png", "Brave Archer",
				"Twilight Whelp", "Alexstrasza's Champion", "Dead Man's Hand", "Netherspite Historian", "Quick Shot",
				"Wyrmrest Agent", "Blackwing Technician", "Divine Favor", "Elder Longneck", "Goblin Sapper",
				"Nightbane Templar", "Twilight Acolyte", "Core Rager", "Duskbreaker", "Midnight Drake",
				"Tanaris Hogchopper", "Twilight Guardian", "Blackwing Corruptor", "Drakonid Operative", "Book Wyrm",
				"Leatherclad Hogleader", "Chillmaw", "Rend Blackhand", "Clockwork Giant", "Mountain Giant",
				"CC BY-NC-SA 3.0", "Powered by MediaWiki", "Powered by Hydra", "Tracking Pixel" };
		for (String string : HAND) {
			Card c = cb.getCard(string);
			if (c != null && !c.getTags().contains(cb.getTags().get("HAND"))) {
				System.out.println(c.getName());
				// break;
			}
		}
		// String[] cs = { "Corpsetaker", "Jan'alai, the Dragonhawk", "Zandalari
		// Templar", "Shudderwock", "Tess Greymane",
//				"Enhance-o Mechano", "Shaku, the Collector", "Master Jouster", "Gral, the Shark" };
//		for (Card c : cb.getCards()) {
//			System.out.println(c.getTags().size() + "\t" + c + "\t" + c.getText() + "\t" + c.getTags());
//		}
	}
}